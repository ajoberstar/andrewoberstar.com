<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="https://andrewoberstar.com/" rel="self" type="application/rss+xml"/><title>Andrew Oberstar</title><link>https://andrewoberstar.com/</link><description>My personal blog.</description><lastBuildDate>Fri, 18 Dec 2020 21:37:45 +0000</lastBuildDate><generator>clj-rss</generator><item><guid>https://andrewoberstar.com/posts/2016-11-19-sample/</guid><link>https://andrewoberstar.com/posts/2016-11-19-sample/</link><title>Testing...</title><description>Just testing the feed after migrating from Squarespace to GitHub Pages.</description><pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2014-11-06-drinking-the-clojure-kool-aid/</guid><link>https://andrewoberstar.com/posts/2014-11-06-drinking-the-clojure-kool-aid/</link><title>Drinking the Clojure Kool-Aid</title><description>As with Scala, my first experience with Clojure was the 7 Languages in 7 Weeks book. That merely gave me a flavor of Clojure's syntax, but didn't lead me to the deep philosophical underpinnings behind Clojure. More recently, I've been watching a lot of Clojure talks and have found Rich Hickey (creator of Clojure to be a very inspiring speaker. His Simple Made Easy talk is easily my favorite, where he lays out a clear distinction between the concepts of simple (as opposed to complex) and easy (as opposed to hard) and how certain programming constructs contain an inherent complexity. That talk also popularized the term complect (to intertwine or braid) within the Clojure community as a way of emphasizing the precise type of complexity that Clojure intends to avoid.As I've read mailing list threads and blog posts and watched more talks by others in the Clojure community, it's clear that the philosophy behind Clojure has a profound resonance with them. It can sometimes seem like they all part of a cult led by Rich Hickey, however, I completely buy into it.</description><pubDate>Thu, 06 Nov 2014 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2014-09-28-quick-gradle-tip-setting-bintray-attributes-for-gradle-plugins/</guid><link>https://andrewoberstar.com/posts/2014-09-28-quick-gradle-tip-setting-bintray-attributes-for-gradle-plugins/</link><title>Quick Gradle Tip - Setting Bintray Attributes for Gradle Plugins</title><description>As part of the new Gradle plugin portal, you need to set some attributes on the version of your plugin package in Bintray.The Bintray Gradle plugin lets you set attributes, so you can add the following snippet into your project to include all of your plugin IDs in the attributes.</description><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2013-08-23-gradle-test-organization/</guid><link>https://andrewoberstar.com/posts/2013-08-23-gradle-test-organization/</link><title>Gradle Test Organization</title><description>Guest post for Safari Books Online.</description><pubDate>Fri, 23 Aug 2013 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2013-08-19-gradle-task-ordering/</guid><link>https://andrewoberstar.com/posts/2013-08-19-gradle-task-ordering/</link><title>Gradle Task Ordering</title><description>Guest post for Safari Books Online.</description><pubDate>Mon, 19 Aug 2013 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2013-07-24-using-gradle-init-scripts-for-a-developer-specific-configuration/</guid><link>https://andrewoberstar.com/posts/2013-07-24-using-gradle-init-scripts-for-a-developer-specific-configuration/</link><title>Using Gradle Init Scripts for Developer-Specific Configuration</title><description>Guest post for Safari Books Online.</description><pubDate>Wed, 24 Jul 2013 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-12-30-raspberry-pi-as-server-dns-and-dhcp/</guid><link>https://andrewoberstar.com/posts/2012-12-30-raspberry-pi-as-server-dns-and-dhcp/</link><title>Raspberry Pi as Server - DNS and DHCP</title><description>In my previous post, I mentioned I'm trying to set up my Raspberry Pi as an LDAP and DNS server.Once I got Raspbian installed, I started to look into setting up the DNS server, the end goal is to have domain names for all devices on my internal network (e.g. instead of 192.168.0.5, I can use mydevice.lan.mydomain.com). While, you can do this with platform specific hostname files (e.g. /etc/hosts or C:\Windows\system32\drivers\drivers\etc\hosts), it requires you to maintain that file on each device.</description><pubDate>Sun, 30 Dec 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-12-30-raspberry-pi-as-ldap-and-dns-introduction/</guid><link>https://andrewoberstar.com/posts/2012-12-30-raspberry-pi-as-ldap-and-dns-introduction/</link><title>Raspberry Pi as LDAP and DNS - Introduction</title><description>For those of you unfamiliar, Raspberry Pi is an inexpensive computer that can run Linux and is about the size of a credit card. I think it was primarily designed for educational purposes -- to get kids into computers -- though it works well for a lot of other use cases. When I got mine, I started off with Raspbmc, the XBMC install for the Pi. I had a few issues and decided to stick with my existing Boxee Box for now.My next project is going to be setting it up as an LDAP server to provide single sign on for my other Linux boxes and maybe trying to connect my Windows boxes to it as well. I'm also thinking about setting up DNS to have intranet domains (e.g. thinking of a .home TLD). I don't know much about configuring either of those or what the implications will be, so this will be a learning process.</description><pubDate>Sun, 30 Dec 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-12-20-gradle-sliced-bread/</guid><link>https://andrewoberstar.com/posts/2012-12-20-gradle-sliced-bread/</link><title>Gradle &gt; Sliced Bread</title><description>I'm not really convinced that sliced bread is that much of an improvement over uncut bread, but Gradle is definitely better. Considering how much I've been using Gradle over the last 2 years, I'm surprised I haven't written anything about it yet.Let's start with the basics. Gradle is a build automation tool, primarily supporting JVM languages (e.g. Java, Groovy, Scala). You may be familiar with Ant and Maven, the two previous behemoths in the Java build space, but for those who don't know:</description><pubDate>Thu, 20 Dec 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-12-02-letter-to-representatives-fiscal-cliff/</guid><link>https://andrewoberstar.com/posts/2012-12-02-letter-to-representatives-fiscal-cliff/</link><title>Letter to Representatives - Fiscal Cliff</title><description>I wanted to post the message I sent to my representatives (Representative McCollum, Senator Franken, and Senator Klobuchar) and urge everyone, regardless of your position, to contact your representatives to let your voice be heard on the significant issue of our national debt and the upcoming "fiscal cliff".I am writing today about the problem of addressing our deficit situation and averting the “fiscal cliff”. I believe that the key to a solution is a long-term vision of a minimal debt and generally balanced budgets. I am a lifelong Minnesotan and traditionally vote Democrat, but I also consider myself fiscally conservative.I very much appreciate your statements of taking a balanced approach that includes both revenue increases and spending cuts. I consider the $1.3 trillion deficit and $359 billion interest payment on our debt in FY2012 to be a travesty. I believe very strongly that the only way to address this issue is to think big. This means holding nothing sacred in these negotiations and considering spending cuts to very expensive (and popular) benefits such as Social Security and Medicare. I am in favor of these safety nets, but their benefits need to be realistically balances with our financial ability to pay for them. However, what seems to be the biggest untouchable is the defense budget. We no longer fight (nor have any reasonable expectation of fighting) a traditional war, yet we spend over $1 trillion on defense. I’m not saying we have no enemies, but the enemies we do have require a vastly different (and I believe much less expensive) type of military.I also firmly agree with you that the rich should pay a larger portion of the tax burden, though I think a long-term solution is going to have to go beyond increasing tax rates. Having $1 trillion dollars in tax expenditures this year is absurd. While reducing or limiting deductions will help, it won’t get us all of the way, which is where raising rates comes in. However, it may help to compromise by considering a smaller raise than letting the Bush cuts expire would result in.I urge you to avoid short-term solutions by thinking big in your continued fight for a debt solution that goes beyond deficit reduction and to address debt reduction. I appreciate your work on this issue, and would be very interested to see more detail on your position.Sincerely,
Andrew Oberstar</description><pubDate>Sun, 02 Dec 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-09-14-if-this-then-that/</guid><link>https://andrewoberstar.com/posts/2012-09-14-if-this-then-that/</link><title>If This Then That</title><description>I heard about If This Then That on Tech News Today a couple weeks ago and just started playing around with it today. It's basically a way for you to automate all kinds of tasks based on different web services (mostly social networks) that you use. Some examples:</description><pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-04-01-adventures-in-scalalift-part-1/</guid><link>https://andrewoberstar.com/posts/2012-04-01-adventures-in-scalalift-part-1/</link><title>Adventurs in Scala/Lift Part 1</title><description>After completing 7 Languages in 7 Weeks, I decided to start working on a project to get my feet wet in Scala. For the past couple weeks I've been reading through Programming in Scala, which is seemingly the definitive Scala book and is written by the language author.I've really enjoyed a lot of Scala features so far:</description><pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-20-65-languages-in-12-days/</guid><link>https://andrewoberstar.com/posts/2012-03-20-65-languages-in-12-days/</link><title>6.5 Languages in 12 Days</title><description>I'm all done with the 7 Languages in 7 Weeks book. Overall, I was very happy with it and recommend it to anyone looking to broaden their programming horizons.This book had a very different style from other programming books I've read. Rather than explain everything I needed to understand the language (and the exercises), the author cut narrow but deep slices through the language to pick out some interesting concepts. With a book trying to show me 7 programming languages, there's nowhere near enough room to explain everything. The big benefit of that is I got to do some non-trivial examples very quickly. But since I didn't have a firm foundation in each language, I very easily tripped myself up.</description><pubDate>Tue, 20 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-19-7-languages-haskell/</guid><link>https://andrewoberstar.com/posts/2012-03-19-7-languages-haskell/</link><title>7 Languages: Haskell</title><description>The final language of 7 Languages in 7 Weeks was Haskell, the only pure functional language in the book. This is the only chapter where I completely gave up on most of the exercises. More on that later...Haskell as a functional language does a lot of the things I've seen in half the languages in the book. It has a list comprehension syntax almost identical to Erlang's, the common list manipulation functions like map, filter, and foldl, as well as pattern matching. Here's one example of a Haskell function:</description><pubDate>Mon, 19 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-18-7-languages-erlang/</guid><link>https://andrewoberstar.com/posts/2012-03-18-7-languages-erlang/</link><title>7 Languages: Erlang</title><description>Chapter 5 of 7 Languages in 7 Weeks is on Erlang. Erlang is a functional language with a strong focus on concurrency and reliability. Its syntax is based on Prolog (i.e. it's weird). The author described it as a language that "makes easy things hard, and hard things easy".As a functional language it has a lot of functions geared towards collection operations (e.g. map, foreach, foldl). Nothing terrible weird about those. It does have this cool feature they call list comprehensions, that are a way for you to combine most of those operations into one line:</description><pubDate>Sun, 18 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-18-7-languages-clojure/</guid><link>https://andrewoberstar.com/posts/2012-03-18-7-languages-clojure/</link><title>7 Languages: Clojure</title><description>Oooooo.... Clojure. Along with Scala, this was one of my most anticipated languages (mainly because of the JVM integration). Clojure is a dialect of Lisp, which is a very old family of programming languages. Most of the syntax is just parentheses.For the xkcd fans:</description><pubDate>Sun, 18 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-13-7-languages-scala/</guid><link>https://andrewoberstar.com/posts/2012-03-13-7-languages-scala/</link><title>7 Languages: Scala</title><description>Just crossed the halfway point of 7 Languages in 7 Weeks with Scala. This is a hybrid object-oriented and functional language. It's a JVM based language, and provides interoperability with existing Java code. Like, Java it has strong static typing. Unlike Java, Scala can infer types in many cases, removing a lot of extra typing. For example in Java:</description><pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-10-7-languages-prolog/</guid><link>https://andrewoberstar.com/posts/2012-03-10-7-languages-prolog/</link><title>7 Languages: Prolog</title><description>Next up in 7 Languages in 7 Weeks was Prolog. This is a logic programming language. Your "code" defines facts and rules, and then executes queries on them. It's all declarative, you don't ever see the algorithm that Prolog uses. It's a very different way of thinking, since you are just describing the problem, and asking Prolog to solve it for you.One of the challenges was to reverse a list in Prolog.</description><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-10-7-languages-io/</guid><link>https://andrewoberstar.com/posts/2012-03-10-7-languages-io/</link><title>7 Languages: Io</title><description>Chapter 2 of 7 Languages in 7 Weeks is on the Io programming language. Io is a prototypical (like JavaScript) object oriented language. JavaScript usually gives me a bad taste in my mouth, because the prototype style just doesn't feel right. However, now that I have more experience with Io's prototyping, I can see the power. I wouldn't want to build an application with prototypes, but I see now that they have their place.You create new objects by cloning other ones:</description><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-03-08-7-languages-ruby/</guid><link>https://andrewoberstar.com/posts/2012-03-08-7-languages-ruby/</link><title>7 Languages: Ruby</title><description>I did end up buying Seven Languages in Seven Weeks. This book covers the following languages:</description><pubDate>Thu, 08 Mar 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-02-28-relearning-php/</guid><link>https://andrewoberstar.com/posts/2012-02-28-relearning-php/</link><title>Relearning PHP</title><description>Very little of my programming life has been outside of the JVM world. Java was the primary language at my college, and is the primary language at my workplace. Recently, I've gotten into Groovy, which is a dynamic language for the JVM. I dabbled a small amount in C++ and PHP, but didn't stick with them.I recently began collaborating with a friend on a website, so I've been trying to relearn PHP which is our common denominator. I read through most of the manual on php.net, but needed something that gave a little more</description><pubDate>Tue, 28 Feb 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-01-12-civility/</guid><link>https://andrewoberstar.com/posts/2012-01-12-civility/</link><title>Civility</title><description>Jon Stewart had a great interview with Senator Jim DeMint (R-IL) on last night's The Daily Show. You can watch the full episode here. You should really watch the extended interview (about 25 minutes) that's linked on the page.My big takeaway from that interview was that if politicians weren't as worried about performing for their electorate, they could actually be reasonable people. From Stewart's explanation of the book, DeMint painted a very black and white picture of this country. However, when talking in a civil interview he made reasonable points about regulation, spending, etc. not being unnecessary, but needing to be more effective.</description><pubDate>Thu, 12 Jan 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2012-01-12-unit-testing-legislation/</guid><link>https://andrewoberstar.com/posts/2012-01-12-unit-testing-legislation/</link><title>Unit Testing Legislation</title><description>Just think how cool it would be if you could run unit tests on legislation...I was just reading through the Wikipedia page on SOPA (the Stop Online Piracy Act), with people going back and forth about whether the bill's language does or does not permit certain activity. I'm misusing the term unit testing, but the idea of running automated tests against legislation to verify that it fulfills it's intended purpose is very appealing. It's inherently difficult (more likely impossible) given the way that law works (not that I understand it), but just go with me for a minute. Imagine if you could write (and run) something like this (yay for Spock against SOPA:</description><pubDate>Thu, 12 Jan 2012 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-11-04-abolish-daylight-savings-time/</guid><link>https://andrewoberstar.com/posts/2011-11-04-abolish-daylight-savings-time/</link><title>Abolish Daylight Savings Time</title><description>I don't have anything particularly interesting to say about this, but I just saw this blog post in my Google Reader. Not my favorite article on the stupidity of Daylight Savings Time, but it'll do.I also read this article from the Washington Post earlier this week, which called for us to move to double Daylight Savings Time. And this is potentially year round... Up here, that means in the depths of winter it would be about 10:00 in the morning before the sun rose. But, yes, it's very important that your get your extra hour of daylight at night time. Because American's spend so much time outside as it is... Maybe your real issue is that you can't figure out how to wake up an hour earlier.</description><pubDate>Fri, 04 Nov 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-07-23-letter-to-my-representatives/</guid><link>https://andrewoberstar.com/posts/2011-07-23-letter-to-my-representatives/</link><title>Letter to My Representiatives</title><description>Below is the letter I just sent to my representatives. Please send one to yours, regardless of your opinion.Senators Franken and Klobuchar and Representative McCollum,This is the first time I've personally written my representatives. This debt ceiling issue is absurd. I've heard many politicians say what "the American people" want. Yet many still act like what we really want is them to get re-elected. Regardless of your qualifications, you are elected to represent us and make a difference. NOT to act solely to be re-elected so you can make a difference tomorrow.I urge you to be fair and levelheaded on the issue of the deficit and the debt ceiling. Please work with your colleagues to raise (or abolish) the debt ceiling and to work towards a balanced budget that will reduce our deficit.It is time to put your party lines aside and do something that makes sense. Make significant cuts and increase revenue (raise some taxes).Please act before the debt limit costs us more than a compromise would.</description><pubDate>Sat, 23 Jul 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-07-16-sharing-on-google/</guid><link>https://andrewoberstar.com/posts/2011-07-16-sharing-on-google/</link><title>Sharing on Google+</title><description>For those not aware, Google+ allows you to share your posts publicly or to any number of circles, which are user-defined collections of people that they follow the posts of. This was meant to allow for privacy where, for example, if I have some family photos I want to share, I could share them with my family circle rather than publicly (as in Twitter)  or with all of my connections (as in Facebook).Jeff Jarvis mentions that he uses circles to limit sharing out of relevance not privacy. That may mean that there are some posts he is fine sharing publicly, but doesn't because it would likely be noise to most of his followers. An extension of the circles concept would be some notion of sharing within a category (or topic or tag).</description><pubDate>Sat, 16 Jul 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-06-11-netflix-and-recommender-systems/</guid><link>https://andrewoberstar.com/posts/2011-06-11-netflix-and-recommender-systems/</link><title>Netflix and Recommender Systems</title><description>This was written as a speech for a training class at work, so the tone is a little odd for a blog post, but oh well.Gary, Sue, and 10 other people like this comment. Customers who shopped for this chair also shopped for that CD. Our best guess for you is 3.7 stars. Many sites now recommend things to you based on the way you use their site. But why do they need to do this?  You can find anything on the Internet. But, because everything is at your fingertips, there's an information overload. There's no way I can look through every movie Netflix has and find the one I should watch next. In order to help us navigate all of these choices, and ultimately become loyal paying customers, websites need to provide value by showing us things we will like.Most sites today that have user ratings information will still merely show you a basic average of everyone's opinion. Based on the number of ratings, this will either tell you what the entire world thinks of something (if it's popular), or what some cult following thinks of it. Neither of which is necessarily applicable to you. What you would rather know is what people who have similar tastes think of it.For my senior research project, I looked at recommender systems; specifically in the context of the Netflix Prize. The goal of this contest was to improve on Netflix's recommendation algorithm by 10%, for which they would award $1 million. They released a massive dataset of 100 million ratings from around a half-million users across a total of 18,000 movies.Through my research I found that there are many different approaches to recommender systems. I'll just cover one that's a little easier to visualize, called matrix factorization. I'll skip the gory math details, but essentially what it tries to do is detect common features among movies. You can think of a feature as action, comedy, or romance, but it ends up being more abstract than that since the algorithm doesn't understand those concepts, it just sees a common thread in the data. For a particular feature, it will try to estimate how much a movie exhibits each of those features and how much a user likes a particular feature. The algorithm will take all of these features together to make its prediction.What you ultimately want get out of these recommender systems, is the ability to take advantage of all of the variety these services provide, but not have to do the dirty work yourself. You can leverage recommendations based on your own preferences, to ideally find movies that you might not have find on a best-seller list, but may just be your favorite movie that you never knew existed.</description><pubDate>Sat, 11 Jun 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-04-17-the-budget-and-the-gang-of-six/</guid><link>https://andrewoberstar.com/posts/2011-04-17-the-budget-and-the-gang-of-six/</link><title>The Budget and The Gang of Six</title><description>I was reading the Star Tribune today, which had a few budget related articles. One was related to the Gang of Six who is trying to get a bipartisan budget deal going. (Note: this is actually an NY Times article)  They also mentioned the NY Times budget calculator from November. I played around with it for a while (here's my plan), which surprising to me required less tax increases than I thought I would have picked. One thing is clear to me after using the tool; something is wrong with Medicare. Admittedly, I have no knowledge of what the effect of the cuts or taxes I chose would beyond the numbers the Times gives. Obviously, it's also a very simplistic view of a complex issue. But it's good to give the public a taste of what those choices are like.I decided to do a little research on this since I don't spend much time reading (or watching) the news. I downloaded Paul Ryan's (House Budget Committee) Path to Prosperity plan. I got through the summary before giving up. It reads like a campaign message, and spends most of the time attacking Obama. While I'm generally pro-Obama, I don't believe he is above criticism. However, I feel like the people in charge of our budget should spend a little more time doing their job rather than trying to keep their job (naive, huh?).</description><pubDate>Sun, 17 Apr 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-03-31-android-open/</guid><link>https://andrewoberstar.com/posts/2011-03-31-android-open/</link><title>Android ... Open?</title><description>BusinessWeek posted an article last night about Android's openness. Rumor is that Google is trying to restrict manufacturers ability to tweak the platform. Considering there isn't anything from Google at this point it's hard to say whether this is any more than grumbling by execs at the device manufacturers. I understand their desire to differentiate their phones from their competitors by customizing the UI. However, as a an Android consumer myself, I don't want their customized OS when it comes at the cost of being stuck on the same version of Android for the life of my phone. I'm a little confused as to how some of these restrictions would work. For example, there is supposedly a "non-fragmentation clause" that Google wants everyone to agree to. Admittedly, I am not an open source, nor Android, expert, but considering this is Apache licensed software we are talking about, how can they restrict people's use of it? Are they going to be delaying the source drops? I've never liked this idea that Android gives a manufacturer early access to the source code. It seems like it should be developed in the open like many of the big open source projects. This seems like an unfortunate direction for Google to go down.</description><pubDate>Thu, 31 Mar 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2011-03-20-att-and-t-mobile-net-neutrality/</guid><link>https://andrewoberstar.com/posts/2011-03-20-att-and-t-mobile-net-neutrality/</link><title>AT&amp;T and T-Mobile ... Net Neutrality?</title><description>So the big story today is the AT&amp;T acquisition of T-Mobile. Here's the announcement.There's been a lot of talk about whether it will be approved by the FCC, and what kind of concessions the FCC might make AT&amp;T accept. For example, this GigaOm article and today's episode of TWiT specifically talk about net neutrality concessions. While I like the idea of getting net neutrality, or anything else, out of AT&amp;T, I really dislike that this seems to be the only way the FCC can put this in place. While I agree with the people who say they don't want the government putting their hands on the Internet, that is their job. The FCC's mission is basically to protect the neutrality of our communications infrastructure.</description><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2010-03-14-2nd-prize-cancelled/</guid><link>https://andrewoberstar.com/posts/2010-03-14-2nd-prize-cancelled/</link><title>2nd Prize Cancelled</title><description>Netflix has officially nixed Netflix Prize 2 over privacy concerns. So I guess that's it for this blog.</description><pubDate>Sun, 14 Mar 2010 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-11-06-netflix-prize-part-2/</guid><link>https://andrewoberstar.com/posts/2009-11-06-netflix-prize-part-2/</link><title>Netflix Prize Part 2</title><description>So...Netflix is coming back with another supposedly harder and timed challenge. Stay tuned...</description><pubDate>Fri, 06 Nov 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-06-19-prize-over/</guid><link>https://andrewoberstar.com/posts/2009-06-19-prize-over/</link><title>Project Over</title><description>Haven't posted in a while, but last call for the Netflix Prize has been out for nearly a month. There may finally be a winner. I'm wondering if the site will be shut down after that or if it will keep going. They would of course have to come up with some new reasoning for the project, since they've already got a 10% improvement over their algorithm.</description><pubDate>Fri, 19 Jun 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-05-03-project-over/</guid><link>https://andrewoberstar.com/posts/2009-05-03-project-over/</link><title>Project Over</title><description>I finished up my project last Monday with my senior seminar presentation.I wasn't able to investigate everything I had planned on, mostly because it took longer than I expected. I may try and work on it after I get out of school if I have time.</description><pubDate>Sun, 03 May 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-04-07-nsvd1-failure/</guid><link>https://andrewoberstar.com/posts/2009-04-07-nsvd1-failure/</link><title>NSVD1 Failure</title><description>I went through my NSVD1 code many times, rewriting it completely four or five times, modifying it countless times, but never beating that 1.013. I even redid the math in that paper to make sure there weren't typos, and I don't have time to try and figure that out anymore.With how far through the semester I am now, I don't have time to try any other algorithms, which is very disappointing but I'll live. So the remainder of my time is going to spent on optimizing the BRISMF code that I already have and try and squeeze as much out of that as possible before I write my paper.</description><pubDate>Tue, 07 Apr 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-04-03-nsvd1-grr/</guid><link>https://andrewoberstar.com/posts/2009-04-03-nsvd1-grr/</link><title>NSVD1 Grr...</title><description>So I tried to work on Gravity's training algorithm for Patarek's NSVD1 recommender. And utterly failed. I'm either reading it wrong, typing wrong, or not understanding the notation, but it's supposed to give me a RMSE of 0.9344, but mine has gone between. 1.013 and 2 something. Yeah...So I'm going to be redoing that one. Hopefully after getting that working, I can do the Hybrid and then finally get on to a few of my own modifications. I only need to figure out what they should be.</description><pubDate>Fri, 03 Apr 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-24-progress-without-perfection/</guid><link>https://andrewoberstar.com/posts/2009-03-24-progress-without-perfection/</link><title>Progress Without Perfection</title><description>Initially, I thought that given the nice detail in the Gravity team's papers, I would be able to implement these and get very close scores. It has turned out not to be the case. As the models get bigger and more complex my results have moved farther away from theirs: not terribly far, but far enough. This could be a factor of details they didn't include in the papers, details I missed in the papers, or my misinterpretations (or programming errors) in implementing them.This was irritating me last week, because I didn't really want to move on to the next level of the algorithm until I had gotten the previous one working. But now I've given up on that. Even though I am not as close to their results as I would like, I am making progress and now with my implementation of their 250 feature, retrained model BRISMF#250UM I have a quiz score of 0.8967.</description><pubDate>Tue, 24 Mar 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-17-dont-rush-your-math/</guid><link>https://andrewoberstar.com/posts/2009-03-17-dont-rush-your-math/</link><title>Don't Rush Your Math</title><description>I've been trying to implement Gravity's BRISMF#250 model but have been getting much higher RMSEs. I had no idea what was wrong so I decided to move on and start implementing the code to retrain features after the initial training. To test I had to rerun my BRISMF#1 model which resulted in an RMSE 0.01 higher, which made no sense. I looked through my code for changes I've made since I initially ran that and came across an error.Most algorithms will require different ranges of random values to fill the feature arrays. But, the way Java's random double generator is set up, it will only return a value between 0.0 and 1.0. Since that's not going to be helpful, I made a quick equation to modify the range. Unfortunately I rushed through what should have been a simple equation and came up with the following.</description><pubDate>Tue, 17 Mar 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-13-1-my-first-attempts/</guid><link>https://andrewoberstar.com/posts/2009-03-13-1-my-first-attempts/</link><title>My First Attempts</title><description>I'll preface this by saying I have no hopes, expectations, or anything else of actually competing in this prize. I came into this hoping to learn about recommender systems.So I started by finding some research papers on recommender systems and collaborative filtering. I read that and assumed I could start implementing a nearest neighbor algorithm. So I pulled out my trusty old Java and wrote a quick app to import the training set into a MySQL database. Once the import actually started to work, it took 10 hours to import. Once that happened some reality set in as to how massive this was compared to anything I'd worked on before. Little did I know, I still hadn't learned.</description><pubDate>Fri, 13 Mar 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-13-3-matrix-factorization/</guid><link>https://andrewoberstar.com/posts/2009-03-13-3-matrix-factorization/</link><title>Matrix Factorization</title><description>The idea behind matrix factorization (which is similar if not the same as what the Netflix community is calling SVD, singular vector decomposition or something) is that you can estimate an I x J matrix R (the ratings matrix) by multiplying two smaller matrices: an I x K and a K x J. Each of those K rows/columns is known as a feature and the matrix factorization (MF) algorithm will estimate the scores for each user and movie.What this allows you to do is essentially generate scores for how much action, comedy, romance, etc. is in a movie. And also how much a certain user likes those aspects.</description><pubDate>Fri, 13 Mar 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-13-2-things-ive-learned-about-java/</guid><link>https://andrewoberstar.com/posts/2009-03-13-2-things-ive-learned-about-java/</link><title>Things I've Learned About Java</title><description>Doing a project with this scale of data (100 million ratings, by 480189 users, on 17770 movies) shows a person just how much they don't know about programming yet.Here's a few things I've learned so far:</description><pubDate>Fri, 13 Mar 2009 00:00:00 +0000</pubDate></item><item><guid>https://andrewoberstar.com/posts/2009-03-13-4-success-relatively/</guid><link>https://andrewoberstar.com/posts/2009-03-13-4-success-relatively/</link><title>Success (Relatively)</title><description>So now that the data is sorted by date as the Gravity team describes in their paper everything worked according to plan. It ran in 13 epochs instead of 50-ish and got a .9217 RMSE instead of 1.0014.Now I can finally start playing around with the other things they've tried. Maybe at some point I can try something of my own.</description><pubDate>Fri, 13 Mar 2009 00:00:00 +0000</pubDate></item></channel></rss>